{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["YqNp2_fPcj0A"],"authorship_tag":"ABX9TyMzFZ1CgQ88F47SvQH/PJF1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"id":"X1JphRKyP01A","executionInfo":{"status":"ok","timestamp":1724204761167,"user_tz":240,"elapsed":720,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["data = pd.read_csv(\"food_coded.csv\")"],"metadata":{"id":"iyCErPoFQ9cj","executionInfo":{"status":"ok","timestamp":1724204762408,"user_tz":240,"elapsed":355,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# Understanding Data"],"metadata":{"id":"YHJsIrpOlWee"}},{"cell_type":"code","source":["print(data.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"b5QYZ4XvRFHi","executionInfo":{"status":"ok","timestamp":1724168659396,"user_tz":240,"elapsed":136,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"a3f67bbf-9e3d-487b-ead4-667845802036"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["(120, 61)\n"]}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"collapsed":true,"id":"vyrWwoIZRJEC","executionInfo":{"status":"ok","timestamp":1724172072080,"user_tz":240,"elapsed":125,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"c036927a-c261-4ece-9b2e-d5ff0f36c06c"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     GPA  Gender  breakfast  calories_chicken  calories_day  calories_scone  \\\n","0  2.400       2          1               430           NaN           315.0   \n","1  3.654       1          1               610           3.0           420.0   \n","2  3.500       1          1               720           2.0           420.0   \n","3  2.250       1          1               610           3.0           980.0   \n","4  3.800       2          1               610           3.0           420.0   \n","\n","   coffee                                  comfort_food  \\\n","0       1                                          none   \n","1       2                   chocolate, chips, ice cream   \n","2       2                  Ice cream, chocolate, chips    \n","3       2                     Candy, brownies and soda.   \n","4       2  Chocolate, ice cream, french fries, pretzels   \n","\n","                                comfort_food_reasons  \\\n","0                              we dont have comfort    \n","1                               Stress, bored, anger   \n","2                         Stress, boredom, cravings    \n","3  None, i don't eat comfort food. I just eat whe...   \n","4                                    stress, boredom   \n","\n","   comfort_food_reasons_coded  ...  soup  sports  thai_food tortilla_calories  \\\n","0                         9.0  ...   1.0     1.0          1            1165.0   \n","1                         1.0  ...   1.0     1.0          2             725.0   \n","2                         1.0  ...   1.0     1.0          4             940.0   \n","3                         4.0  ...   1.0     2.0          4             940.0   \n","4                         1.0  ...   1.0     1.0          5             940.0   \n","\n","   turkey_calories  type_sports veggies_day  vitamins  waffle_calories  weight  \n","0              345   car racing           5         1             1315   187.0  \n","1              690  Basketball            4         2              900   155.0  \n","2              500     Softball           4         2              760   190.0  \n","3              345        None.           1         2             1315   190.0  \n","4              690       soccer           4         1             1315   180.0  \n","\n","[5 rows x 61 columns]"],"text/html":["\n","  <div id=\"df-64b8855c-ff18-43d3-a379-49703ed8964f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GPA</th>\n","      <th>Gender</th>\n","      <th>breakfast</th>\n","      <th>calories_chicken</th>\n","      <th>calories_day</th>\n","      <th>calories_scone</th>\n","      <th>coffee</th>\n","      <th>comfort_food</th>\n","      <th>comfort_food_reasons</th>\n","      <th>comfort_food_reasons_coded</th>\n","      <th>...</th>\n","      <th>soup</th>\n","      <th>sports</th>\n","      <th>thai_food</th>\n","      <th>tortilla_calories</th>\n","      <th>turkey_calories</th>\n","      <th>type_sports</th>\n","      <th>veggies_day</th>\n","      <th>vitamins</th>\n","      <th>waffle_calories</th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.400</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>430</td>\n","      <td>NaN</td>\n","      <td>315.0</td>\n","      <td>1</td>\n","      <td>none</td>\n","      <td>we dont have comfort</td>\n","      <td>9.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1165.0</td>\n","      <td>345</td>\n","      <td>car racing</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>187.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.654</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>610</td>\n","      <td>3.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>chocolate, chips, ice cream</td>\n","      <td>Stress, bored, anger</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>725.0</td>\n","      <td>690</td>\n","      <td>Basketball</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>900</td>\n","      <td>155.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.500</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>720</td>\n","      <td>2.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>Ice cream, chocolate, chips</td>\n","      <td>Stress, boredom, cravings</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>940.0</td>\n","      <td>500</td>\n","      <td>Softball</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>760</td>\n","      <td>190.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.250</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>610</td>\n","      <td>3.0</td>\n","      <td>980.0</td>\n","      <td>2</td>\n","      <td>Candy, brownies and soda.</td>\n","      <td>None, i don't eat comfort food. I just eat whe...</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","      <td>940.0</td>\n","      <td>345</td>\n","      <td>None.</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1315</td>\n","      <td>190.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.800</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>610</td>\n","      <td>3.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>Chocolate, ice cream, french fries, pretzels</td>\n","      <td>stress, boredom</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>5</td>\n","      <td>940.0</td>\n","      <td>690</td>\n","      <td>soccer</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>180.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 61 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64b8855c-ff18-43d3-a379-49703ed8964f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64b8855c-ff18-43d3-a379-49703ed8964f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64b8855c-ff18-43d3-a379-49703ed8964f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1deb5e33-cfca-43ef-8189-f26e7027fce9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1deb5e33-cfca-43ef-8189-f26e7027fce9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1deb5e33-cfca-43ef-8189-f26e7027fce9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"collapsed":true,"id":"UTn_VrnlRKeZ","executionInfo":{"status":"ok","timestamp":1724168662192,"user_tz":240,"elapsed":109,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"562ffa03-f550-4b28-c86a-87dd40807ad7"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       GPA  Gender  breakfast  calories_chicken  calories_day  calories_scone  \\\n","115  3.500       1          1               610           4.0           420.0   \n","116  3.000       1          1               265           2.0           315.0   \n","117  3.882       1          1               720           NaN           420.0   \n","118  3.000       2          1               720           4.0           420.0   \n","119  3.900       1          1               430           NaN           315.0   \n","\n","     coffee                             comfort_food  \\\n","115       2  wine. mac and cheese, pizza, ice cream    \n","116       2               Pizza / Wings / Cheesecake   \n","117       1               rice, potato, seaweed soup   \n","118       1             Mac n Cheese, Lasagna, Pizza   \n","119       2             Chocolates, pizza, and Ritz.   \n","\n","                              comfort_food_reasons  \\\n","115                           boredom and sadness    \n","116                Loneliness / Homesick / Sadness   \n","117                                        sadness   \n","118  happiness, they are some of my favorite foods   \n","119               hormones, Premenstrual syndrome.   \n","\n","     comfort_food_reasons_coded  ...  soup  sports  thai_food  \\\n","115                         NaN  ...   1.0     1.0          5   \n","116                         NaN  ...   1.0     NaN          4   \n","117                         NaN  ...   1.0     2.0          5   \n","118                         NaN  ...   2.0     2.0          1   \n","119                         NaN  ...   1.0     2.0          2   \n","\n","    tortilla_calories  turkey_calories  type_sports veggies_day  vitamins  \\\n","115             940.0              500     Softball           5         1   \n","116             940.0              500  basketball            5         2   \n","117             580.0              690         none           4         2   \n","118             940.0              500          NaN           3         1   \n","119             725.0              345          NaN           4         2   \n","\n","     waffle_calories  weight  \n","115             1315     156  \n","116             1315     180  \n","117             1315     120  \n","118             1315     135  \n","119              575     135  \n","\n","[5 rows x 61 columns]"],"text/html":["\n","  <div id=\"df-4dc65b23-1c5a-4886-8def-75339cb233dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GPA</th>\n","      <th>Gender</th>\n","      <th>breakfast</th>\n","      <th>calories_chicken</th>\n","      <th>calories_day</th>\n","      <th>calories_scone</th>\n","      <th>coffee</th>\n","      <th>comfort_food</th>\n","      <th>comfort_food_reasons</th>\n","      <th>comfort_food_reasons_coded</th>\n","      <th>...</th>\n","      <th>soup</th>\n","      <th>sports</th>\n","      <th>thai_food</th>\n","      <th>tortilla_calories</th>\n","      <th>turkey_calories</th>\n","      <th>type_sports</th>\n","      <th>veggies_day</th>\n","      <th>vitamins</th>\n","      <th>waffle_calories</th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>115</th>\n","      <td>3.500</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>610</td>\n","      <td>4.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>wine. mac and cheese, pizza, ice cream</td>\n","      <td>boredom and sadness</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>5</td>\n","      <td>940.0</td>\n","      <td>500</td>\n","      <td>Softball</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>156</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>3.000</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>265</td>\n","      <td>2.0</td>\n","      <td>315.0</td>\n","      <td>2</td>\n","      <td>Pizza / Wings / Cheesecake</td>\n","      <td>Loneliness / Homesick / Sadness</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>940.0</td>\n","      <td>500</td>\n","      <td>basketball</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1315</td>\n","      <td>180</td>\n","    </tr>\n","    <tr>\n","      <th>117</th>\n","      <td>3.882</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>720</td>\n","      <td>NaN</td>\n","      <td>420.0</td>\n","      <td>1</td>\n","      <td>rice, potato, seaweed soup</td>\n","      <td>sadness</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>580.0</td>\n","      <td>690</td>\n","      <td>none</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1315</td>\n","      <td>120</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>3.000</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>720</td>\n","      <td>4.0</td>\n","      <td>420.0</td>\n","      <td>1</td>\n","      <td>Mac n Cheese, Lasagna, Pizza</td>\n","      <td>happiness, they are some of my favorite foods</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>940.0</td>\n","      <td>500</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>135</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>3.900</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>430</td>\n","      <td>NaN</td>\n","      <td>315.0</td>\n","      <td>2</td>\n","      <td>Chocolates, pizza, and Ritz.</td>\n","      <td>hormones, Premenstrual syndrome.</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","      <td>725.0</td>\n","      <td>345</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>575</td>\n","      <td>135</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 61 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4dc65b23-1c5a-4886-8def-75339cb233dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4dc65b23-1c5a-4886-8def-75339cb233dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4dc65b23-1c5a-4886-8def-75339cb233dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a757d16e-00bd-430c-9b7f-20c86a1ca1f8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a757d16e-00bd-430c-9b7f-20c86a1ca1f8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a757d16e-00bd-430c-9b7f-20c86a1ca1f8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["data.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"collapsed":true,"id":"hvzOERKsRxxh","executionInfo":{"status":"ok","timestamp":1724171554262,"user_tz":240,"elapsed":124,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"1509c1e5-8e30-475b-9bd4-21dd6fbc2808"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GPA                 float64\n","Gender                int64\n","breakfast             int64\n","calories_chicken      int64\n","calories_day        float64\n","                     ...   \n","type_sports          object\n","veggies_day           int64\n","vitamins              int64\n","waffle_calories       int64\n","weight              float64\n","Length: 61, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>GPA</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>breakfast</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>calories_chicken</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>calories_day</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>type_sports</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>veggies_day</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>vitamins</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>waffle_calories</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>weight</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>61 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"collapsed":true,"id":"wd5D5SrEbDHJ","executionInfo":{"status":"ok","timestamp":1724168670558,"user_tz":240,"elapsed":282,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"e791b582-2ed8-49c1-b9d5-bd0c58e45ebf"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              GPA      Gender   breakfast  calories_chicken  calories_day  \\\n","count  118.000000  120.000000  120.000000        120.000000    101.000000   \n","mean     3.418364    1.400000    1.116667        574.708333      3.019802   \n","std      0.392799    0.491952    0.322369        131.259727      0.632142   \n","min      2.200000    1.000000    1.000000        265.000000      2.000000   \n","25%      3.200000    1.000000    1.000000        430.000000      3.000000   \n","50%      3.500000    1.000000    1.000000        610.000000      3.000000   \n","75%      3.700000    2.000000    1.000000        610.000000      3.000000   \n","max      4.000000    2.000000    2.000000        720.000000      4.000000   \n","\n","       calories_scone      coffee  comfort_food_reasons_coded        cook  \\\n","count      119.000000  120.000000                  101.000000  117.000000   \n","mean       504.117647    1.741667                    2.732673    2.820513   \n","std        231.057487    0.439554                    2.009433    1.022298   \n","min        315.000000    1.000000                    1.000000    1.000000   \n","25%        420.000000    1.000000                    2.000000    2.000000   \n","50%        420.000000    2.000000                    2.000000    3.000000   \n","75%        420.000000    2.000000                    3.000000    3.000000   \n","max        980.000000    2.000000                    9.000000    5.000000   \n","\n","       comfort_food_reasons_coded.1  ...  persian_food  \\\n","count                    120.000000  ...    119.000000   \n","mean                       2.716667  ...      2.789916   \n","std                        1.941079  ...      1.413458   \n","min                        1.000000  ...      1.000000   \n","25%                        2.000000  ...      2.000000   \n","50%                        2.000000  ...      3.000000   \n","75%                        3.000000  ...      4.000000   \n","max                        9.000000  ...      5.000000   \n","\n","       self_perception_weight        soup      sports   thai_food  \\\n","count              119.000000  119.000000  118.000000  120.000000   \n","mean                 3.075630    1.210084    1.372881    3.316667   \n","std                  1.074825    0.409091    0.485633    1.431831   \n","min                  1.000000    1.000000    1.000000    1.000000   \n","25%                  2.000000    1.000000    1.000000    2.000000   \n","50%                  3.000000    1.000000    1.000000    3.000000   \n","75%                  4.000000    1.000000    2.000000    5.000000   \n","max                  6.000000    2.000000    2.000000    5.000000   \n","\n","       tortilla_calories  turkey_calories  veggies_day    vitamins  \\\n","count         119.000000       120.000000   120.000000  120.000000   \n","mean          947.731092       551.250000     4.008333    1.533333   \n","std           202.310539       151.952627     1.088487    0.500979   \n","min           580.000000       345.000000     1.000000    1.000000   \n","25%           725.000000       500.000000     3.000000    1.000000   \n","50%           940.000000       500.000000     4.000000    2.000000   \n","75%          1165.000000       690.000000     5.000000    2.000000   \n","max          1165.000000       850.000000     5.000000    2.000000   \n","\n","       waffle_calories  \n","count       120.000000  \n","mean       1066.791667  \n","std         249.348560  \n","min         575.000000  \n","25%         900.000000  \n","50%         900.000000  \n","75%        1315.000000  \n","max        1315.000000  \n","\n","[8 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-a7f37977-8add-4336-8fd6-b9f7cb7f21f3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GPA</th>\n","      <th>Gender</th>\n","      <th>breakfast</th>\n","      <th>calories_chicken</th>\n","      <th>calories_day</th>\n","      <th>calories_scone</th>\n","      <th>coffee</th>\n","      <th>comfort_food_reasons_coded</th>\n","      <th>cook</th>\n","      <th>comfort_food_reasons_coded.1</th>\n","      <th>...</th>\n","      <th>persian_food</th>\n","      <th>self_perception_weight</th>\n","      <th>soup</th>\n","      <th>sports</th>\n","      <th>thai_food</th>\n","      <th>tortilla_calories</th>\n","      <th>turkey_calories</th>\n","      <th>veggies_day</th>\n","      <th>vitamins</th>\n","      <th>waffle_calories</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>118.000000</td>\n","      <td>120.000000</td>\n","      <td>120.000000</td>\n","      <td>120.000000</td>\n","      <td>101.000000</td>\n","      <td>119.000000</td>\n","      <td>120.000000</td>\n","      <td>101.000000</td>\n","      <td>117.000000</td>\n","      <td>120.000000</td>\n","      <td>...</td>\n","      <td>119.000000</td>\n","      <td>119.000000</td>\n","      <td>119.000000</td>\n","      <td>118.000000</td>\n","      <td>120.000000</td>\n","      <td>119.000000</td>\n","      <td>120.000000</td>\n","      <td>120.000000</td>\n","      <td>120.000000</td>\n","      <td>120.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.418364</td>\n","      <td>1.400000</td>\n","      <td>1.116667</td>\n","      <td>574.708333</td>\n","      <td>3.019802</td>\n","      <td>504.117647</td>\n","      <td>1.741667</td>\n","      <td>2.732673</td>\n","      <td>2.820513</td>\n","      <td>2.716667</td>\n","      <td>...</td>\n","      <td>2.789916</td>\n","      <td>3.075630</td>\n","      <td>1.210084</td>\n","      <td>1.372881</td>\n","      <td>3.316667</td>\n","      <td>947.731092</td>\n","      <td>551.250000</td>\n","      <td>4.008333</td>\n","      <td>1.533333</td>\n","      <td>1066.791667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.392799</td>\n","      <td>0.491952</td>\n","      <td>0.322369</td>\n","      <td>131.259727</td>\n","      <td>0.632142</td>\n","      <td>231.057487</td>\n","      <td>0.439554</td>\n","      <td>2.009433</td>\n","      <td>1.022298</td>\n","      <td>1.941079</td>\n","      <td>...</td>\n","      <td>1.413458</td>\n","      <td>1.074825</td>\n","      <td>0.409091</td>\n","      <td>0.485633</td>\n","      <td>1.431831</td>\n","      <td>202.310539</td>\n","      <td>151.952627</td>\n","      <td>1.088487</td>\n","      <td>0.500979</td>\n","      <td>249.348560</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2.200000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>265.000000</td>\n","      <td>2.000000</td>\n","      <td>315.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>580.000000</td>\n","      <td>345.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>575.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.200000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>430.000000</td>\n","      <td>3.000000</td>\n","      <td>420.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>725.000000</td>\n","      <td>500.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>900.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.500000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>610.000000</td>\n","      <td>3.000000</td>\n","      <td>420.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>940.000000</td>\n","      <td>500.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>900.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.700000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>610.000000</td>\n","      <td>3.000000</td>\n","      <td>420.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>...</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>1165.000000</td>\n","      <td>690.000000</td>\n","      <td>5.000000</td>\n","      <td>2.000000</td>\n","      <td>1315.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>720.000000</td>\n","      <td>4.000000</td>\n","      <td>980.000000</td>\n","      <td>2.000000</td>\n","      <td>9.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>...</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>1165.000000</td>\n","      <td>850.000000</td>\n","      <td>5.000000</td>\n","      <td>2.000000</td>\n","      <td>1315.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 48 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7f37977-8add-4336-8fd6-b9f7cb7f21f3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7f37977-8add-4336-8fd6-b9f7cb7f21f3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7f37977-8add-4336-8fd6-b9f7cb7f21f3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2b85f7ce-490c-4d25-8905-35a8a21d1085\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b85f7ce-490c-4d25-8905-35a8a21d1085')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2b85f7ce-490c-4d25-8905-35a8a21d1085 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["data[\"comfort_food\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"collapsed":true,"id":"_8s24OwCezn7","executionInfo":{"status":"ok","timestamp":1724169044664,"user_tz":240,"elapsed":125,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"389565d0-b0ad-4837-d7f4-344776cb86f3"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["comfort_food\n","none                                                       1\n","Cookies, burgers, chicken noodle soup, ice cream           1\n","Chocolate, Chips, Ice cream, French Fires, Pizza           1\n","Macaroni and cheese, chicken noodle soup, pizza            1\n","chips, ice cream, fruit snacks                             1\n","                                                          ..\n","chocolate, chips, candy                                    1\n","pizza, doughnuts, mcdonalds                                1\n","mac n cheese, peanut butter and banana sandwich, omelet    1\n","french fries, chips, ice cream                             1\n","Chocolates, pizza, and Ritz.                               1\n","Name: count, Length: 119, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>comfort_food</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>none</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Cookies, burgers, chicken noodle soup, ice cream</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Chocolate, Chips, Ice cream, French Fires, Pizza</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Macaroni and cheese, chicken noodle soup, pizza</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>chips, ice cream, fruit snacks</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>chocolate, chips, candy</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>pizza, doughnuts, mcdonalds</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>mac n cheese, peanut butter and banana sandwich, omelet</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>french fries, chips, ice cream</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Chocolates, pizza, and Ritz.</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>119 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["# Missing Values"],"metadata":{"id":"TbzB1VKmbNLL"}},{"cell_type":"markdown","source":["Detect missing values"],"metadata":{"id":"_fNlvkeCfjLq"}},{"cell_type":"code","source":["data.isnull().any().any()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"KFebP86iRLoQ","executionInfo":{"status":"ok","timestamp":1724172100326,"user_tz":240,"elapsed":114,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"d53b7c41-be94-4a12-d868-3577e6a6b20e"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"collapsed":true,"id":"5Trr_kVtRPyn","executionInfo":{"status":"ok","timestamp":1724172771247,"user_tz":240,"elapsed":153,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"e9d6cdf4-7586-475b-b404-dbb1d2b0aaa6"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GPA                 0\n","Gender              0\n","breakfast           0\n","calories_chicken    0\n","calories_day        0\n","                   ..\n","type_sports         0\n","veggies_day         0\n","vitamins            0\n","waffle_calories     0\n","weight              0\n","Length: 61, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>GPA</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>breakfast</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>calories_chicken</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>calories_day</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>type_sports</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>veggies_day</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>vitamins</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>waffle_calories</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>weight</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>61 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":107}]},{"cell_type":"markdown","source":["Drop all missing values"],"metadata":{"id":"M7EOtCf6foHe"}},{"cell_type":"code","source":["data.dropna()"],"metadata":{"id":"57150PrItLVJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.isnull().any().any()"],"metadata":{"id":"rwAWmKL6non1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.dropna(axis=0, inplace=True)"],"metadata":{"id":"0WxqxtJTbxoj","executionInfo":{"status":"ok","timestamp":1724204773744,"user_tz":240,"elapsed":179,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["Drop a subset of missing values"],"metadata":{"id":"fhkq9QUhfu3s"}},{"cell_type":"code","source":["data.dropna(subset=[\"type_sports\"], axis=0, inplace=True)"],"metadata":{"id":"UvP3CmpIRuyL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Imputation"],"metadata":{"id":"hvrxvgJwf2li"}},{"cell_type":"code","source":["avg_calories = data['calories_day'].mean()\n","data[\"calories_day\"].replace(np.NaN, avg_calories, inplace = True)"],"metadata":{"id":"CCoOBF9lRRyL","executionInfo":{"status":"ok","timestamp":1724168686346,"user_tz":240,"elapsed":117,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":31,"outputs":[]},{"cell_type":"markdown","source":["# Visualization"],"metadata":{"id":"3XaH9BW-mApp"}},{"cell_type":"code","source":["%matplotlib inline\n","import matplotlib.pyplot as plt"],"metadata":{"id":"wFeTaawUqJcJ","executionInfo":{"status":"ok","timestamp":1724204786217,"user_tz":240,"elapsed":192,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["plt.hist(data[\"Gender\"])\n","\n","# set x/y labels and plot title\n","plt.xlabel(\"Gender\")\n","plt.ylabel(\"count\")\n","plt.title(\"Gender\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"collapsed":true,"id":"_1nimFB0lvBK","executionInfo":{"status":"ok","timestamp":1724170884961,"user_tz":240,"elapsed":527,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"7a4f6d6d-a537-46a1-e99f-b45bae24fc23"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Gender')"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.hist(data[\"GPA\"])\n","\n","# set x/y labels and plot title\n","plt.xlabel(\"GPA\")\n","plt.ylabel(\"count\")\n","plt.title(\"GPA\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"collapsed":true,"id":"VETgMV3-nhT6","executionInfo":{"status":"ok","timestamp":1724171402093,"user_tz":240,"elapsed":565,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"42028229-0ca5-45b9-af54-7bd92984e0e0"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'GPA')"]},"metadata":{},"execution_count":52},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Data Standardization\n","\n","Data is usually collected from different agencies with different formats.\n","Standardization is the process of transforming data into a common format which allows the researcher to make the meaningful comparison.\n","\n","For example, if data is coming from two sources with weight measured in kg in one source, and measured in lb in another source, you need to use one of the measurements as the standard!"],"metadata":{"id":"qL2S1_PHcPOY"}},{"cell_type":"markdown","source":["# Data Normalization\n","\n","Normalization is the process of transforming values of several variables into a similar range.\n","\n","Typical normalizations include scaling the variable so the variable average is 0, scaling the variable so the variance is 1, or scaling variable so the variable values range from 0 to 1."],"metadata":{"id":"YqNp2_fPcj0A"}},{"cell_type":"markdown","source":["To demonstrate normalization, let's say we want to scale the columns \"weight\"\n","\n","Target:would like to Normalize this variable so its value ranges from 0 to 1.\n","\n","Approach: replace original value by (original value)/(maximum value)"],"metadata":{"id":"Gcnl_UaecvGW"}},{"cell_type":"code","source":["data['GPA'] = data['GPA']/data['GPA'].max()"],"metadata":{"id":"3KcclyPNc6-0","executionInfo":{"status":"ok","timestamp":1724168800650,"user_tz":240,"elapsed":379,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["data['GPA'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"collapsed":true,"id":"UXmGvZMNeEBF","executionInfo":{"status":"ok","timestamp":1724168821041,"user_tz":240,"elapsed":110,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"8fe4d258-8edf-4e27-bd5d-9af1816d0936"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    118.000000\n","mean       0.595331\n","std        0.116594\n","min        0.377358\n","25%        0.509434\n","50%        0.584906\n","75%        0.674528\n","max        1.000000\n","Name: weight, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>118.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.595331</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.116594</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.377358</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.509434</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.584906</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.674528</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["# Outliers"],"metadata":{"id":"zIq-2yS5uwxn"}},{"cell_type":"markdown","source":["An outlier is a data point that differs significantly from other observations.\n","\n","An outlier may be due to a variability in the measurement, an indication of novel data, or it may be the result of experimental error; the latter are usually omitted from the data set"],"metadata":{"id":"VCYysJIzu7Dl"}},{"cell_type":"code","source":["plt.boxplot(data[\"weight\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"collapsed":true,"id":"60sXf8qCn-dv","executionInfo":{"status":"ok","timestamp":1724172728017,"user_tz":240,"elapsed":308,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}},"outputId":"92ac8f89-c974-4397-c83d-ad48e2809bc5"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'whiskers': [<matplotlib.lines.Line2D at 0x7c2c51207b20>,\n","  <matplotlib.lines.Line2D at 0x7c2c51207d00>],\n"," 'caps': [<matplotlib.lines.Line2D at 0x7c2c512077c0>,\n","  <matplotlib.lines.Line2D at 0x7c2c51206ef0>],\n"," 'boxes': [<matplotlib.lines.Line2D at 0x7c2c51207bb0>],\n"," 'medians': [<matplotlib.lines.Line2D at 0x7c2c51204ac0>],\n"," 'fliers': [<matplotlib.lines.Line2D at 0x7c2c51206a40>],\n"," 'means': []}"]},"metadata":{},"execution_count":104},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.drop(data.loc[data['weight']>=260].index, inplace=True)"],"metadata":{"id":"1P_wEEz5sNhe","executionInfo":{"status":"ok","timestamp":1724172725716,"user_tz":240,"elapsed":149,"user":{"displayName":"Nasim Mousavi","userId":"10561290162055823573"}}},"execution_count":103,"outputs":[]}]}